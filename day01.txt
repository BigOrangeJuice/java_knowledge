java_day01

改变环境变量：【计算机】-【高级系统设置】-【高级】-【环境变量】-【系统变量】-【path】在后面跟bin的路径 or 直接新建环境变量与path建立连接

1.常用的DOS命令：
	—— exit：退出当前DOS命令窗口
	—— cls：清屏
	—— DOS命令窗口的内容进行复制：【鼠标右键】-【标记】-【选择要复制的区域】-【右键】
	—— dir：列出当前目录下所有的子文件/子目录
	—— cd命令：
		* cd：change directory【改变目录】
		* 使用方法：cd 目录路径
		* 路径包括绝对路径和相对路径
			>绝对路径：表示该路径从某个磁盘的盘符下作为出发点的路径
			>相对路径：表示该路径从当前所在的路径下作为出发点的路径
		* [cd ..] ：回到上级目录
		* [cd \] : 回到根目录
		* [cd .] : 当前目录
	—— 切换盘符：盘名称: 回车

2.显示文件拓展名：菜单栏【工具】-【文件夹选项】-【查看】-【高级设置】

3.java语言主要特性：
	* 简单性：不支持多继承；没有指针概念
	* 面向对象
	* 可移植性：编译一次，到处运行【此特性可跨平台】
		windows操作系统和linux操作系统内核不同，执行指令的方式也不同
		因此，java并非直接和操作系统打交道，而是java先交予java虚拟机(JVM),再让JVM与操作系统打交道
	* 多线程
	* 健壮性：垃圾自动回收（GC机制）
	* 安全性

4.java的加载与运行

	* java程序的运行包括两个重要阶段
		—— 编译阶段
		—— 运行阶段

	* 编译阶段

		—— 主要任务：检查java源程序是否符合java语法
			符合，生成正常的字节码文件(xxx.class)
			不符合，无法生成
		
		—— 字节码文件中不是纯粹的二进制，这种文件无法在操作系统中直接执行

		—— 编译过程：

			* 新建一个.java扩展名的文件，该文件被称为java源文件

			* java程序员需要使用JDK当中自带的javac.exe命令进行java程序的编译

				javac：全称java complier
				—— 使用规则：javac java源文件的路径
				—— 使用位置：在DOS命令窗口中

				javac是一个java编译器工具/命令

			* 一个java源文件可以编译生成多个.class文件

			* 字节码文件/class文件是最终要执行的文件【即class文件生成之后，java源文件删除以后也并不会影响java程序的执行，一般不删除】

			* 可以将class文件拷贝到其他操作系统当中运行

	* 运行阶段

		—— JDK安装之后，除了自带一个javac.exe，还会有另一个工具/命令[java.exe]，它主要负责运行阶段

			java.exe:
			——使用规则：java 类名
			——使用位置：在DOS命令窗口中
			——使用规范：比如有个A.class，运行：java A
					我试了试，如果有源文件A.java，运行java A.java也行
					但不可以写成java A.class【记住就行】

		—— 运行过程：

			* 打开DOS命令窗口

			* 输入 java A

			* java.exe命令会启动java虚拟机(JVM),JVM会启动类加载器ClassLoader

			* ClassLoader会去硬盘里搜索A.class文件，找到字节码文件并装在JVM中

			* JVM将A.class字节码文件解释为二进制数据

			* 然后操作系统执行二进制，和底层硬件平台进行交互

5.JDK,JRE,JVM

	—— JDK 包含 JRE 包含 JVM

	* JDK(java development kit),java开发工具包【可独立安装，安装时自带JRE和JVM】

	* JRE(java runtime environment),java运行环境【可独立安装，安装时自带JVM】

	* JVM(java virtual machine),java虚拟机【不可独立安装】

	* JDK安装目录下有一个jre的目录，里面有bin文件夹和lib文件夹，在这里bin可以认为是JVM，lib则是JVM工作所需要的类库，而JVM和lib合并叫JRE ；

	  SE(standard edition)——标准版，EE(enterprise edition)——企业版，ME(micro edition)——移动端开发

6.Hello World!代码：

	public class HelloWorld{
		public static void main(String[] args){
			System.out.println("Hello World!") ;		//println——输出且换行
		}
	}

7.注释：

	* 单行注释：//内容

	* 多行注释：/*   内容    */

	* javadoc注释(更专业) ：/**
				*  内容
				*  内容
				*  内容
				*  内容
				*  内容可被javadoc.exe工具解析提取并生成帮助文档
				*/

8.public class 和 class 的区别：
	
	* 一个java源文件当中可以定义多个class

	* public class 并非必须的

	* 一个class会对应生成一个xxx.class字节码文件

	* 定义public class的话，有且只能有一个，且该类名称必须和java源文件名称一致(文件名)，而class则不必，编译完成后，只需要运行指定的类名即可

	* class内必须有main主入口，否则无法运行【可以通过编译】

	* 每个class当中都可以编写main方法，都可以设定程序的入口
