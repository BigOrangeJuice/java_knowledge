javaday07
2021/7/22

引例：定义了一个User类内含age属性，但如果只是单单定义了age，那么外部程序将可以随意访问age属性，会让age属性变得不安全，因此要用到【封装】。

1.封装：

	—— 好处：

		* 复杂性封装，对外提供简单的操作入口。比如照相机、电视机

		* 封装以后才是真正的【对象】，真正的【独立体】

		* 封装后意味着可以被重复调用。适应性较强，任何场合均可使用

		* 提高了事物属性的安全性

	—— 步骤：

		1> 所有属性私有化，使用private关键字进行修饰，private修饰的属性只能在本类进行访问

			private 数据类型 变量名 ;

		2> 对外提供简单的操作入口：
		
			* 读取属性用get方法
				
				public 数据类型 get属性名【首字母大写】(){}

			* 修改属性用set方法

				public void set属性名【首字母大写】(){}

			* 注意：set属性名和get属性名不用static修饰

			* 调用的时候：引用.set属性名/get属性名

2.构造方法：

	* 又叫构造函数/构造器/Constructor

	* 对于构造方法，无需制定返回值，void也不必，一旦写上返回值，就成为了普通方法

	* 对于构造方法，构造方法的方法名必须和类名保持一致【首字母的大小写注意一致，有点特殊，这个的方法名的首字母大写】

	* 语法结构：

		[修饰符列表] 构造方法名(形参数据列表){
			方法体 ;
		}

	* 作用： 1> 创建对象

		 2> 创建对象的同时，初始化实例变量的内存空间【即赋值】【但如果有个变量曾经有值，但这次执行构造方法没有赋值，系统也会给其附默认值】

	*  作用：通过构造方法的调用，可以创建对象

	*  调用：

		—— 普通方法：有static修饰，类名.方法名(实参列表)

			     无static修饰，引用.方法名(实参列表)

		—— 构造方法：new 构造方法名(实参列表)

	* 每一个构造方法实际上执行结束后都会有一个返回值，只不过return语句不用我们写，java程序自动返回 

	* 返回值类型为构造方法所在类的类型

	* 当一个类中没有任何构造方法时，系统会默认给该类提供一个无参数的构造方法，这种构造方法叫做缺省构造器【建议手动添加无参构造器】

	* 构造器可重载

3.实例变量没有初始化时，系统自动赋予默认值，那这个值是什么时候附的：

	* 不是在类加载的时候，此刻只加载了代码片段

	* 是在构造方法执行当中进行的【即上面的初始化实例变量的内存空间】

4.参数传递：值传递(但这个值有时候是个字面值，有时候是一个指向对象的地址值)
