java_day11
2021/7/26

1.类体：

	* 除极少数以外，在java中任何有效的代码必须写到“类体”当中，最外层必须是一个类的定义

	* 类名后面有一对大括号｛｝，这对大括号被称为“类体”

	* 要想运行类，类中必须要有main方法，此为主入口，定义格式：public static void main(String[] args)

2.main方法：

	* 类的主入口

	* 定义格式：public static void main(String[] args)	args可以随意改写

3.二维数组作参数：
		
	形式：数据类型[][] 数组名

	传参：1>直接传递数组变量

	      2>通过new一个静态数组也可以

4.比较字符串中==和.equals()：

	—— ==比较的是两个String对象的内存地址，如果创建两个String对象后对比，即使俩指向的内容一致，但由于内存地址不一样，结果也会是false

		但如果没有创建对象只是单单指向同一个字符串常量，结果则为true

	—— .equals()：对比的是两字符串内的内容

		格式：字符串1.equals(字符串2)

			相等返回true；不相等返回false

5.Arrays.toString(数组名)：直接输出数组

6.选择排序和冒泡排序：

	针对由大到小降序排列：

	—— 选择排序：通过一次循环操作就可以找出数组中的最大值，并将其移动到数组的首位，接着进行二次循环，直到将数组有序排列

	—— 冒泡排序：依次比较相邻的两个数，将小的数放后面，大的数放前面，一趟下来，将最小的数放在最后面，接着从头开始第二趟，直到有序排列

7.super()：

	* 位置：实例方法和构造方法当中，不能用在静态方法中

	* 语法："super."、"super()"

	* 多数情况可以省略

	* super()：用户不写也会隐式自带

		—— 表示通过子类的构造方法调用父类的构造方法【要想有儿子，先得有老子】

		—— 只能出现在构造方法第一行

		—— 通过当前构造方法调用"父类"中的构造方法

		—— 目的：创建子类对象时，先初始化父类型特征

		—— 当一个构造方法的第一行既没有this()也没有super()时，默认会有一个super()

			表示子类构造方法调用父类的无参构造方法【因此必须保证父类的无参构造方法存在】

		—— 没有继承父类，构造方法也会自带super()【这是继承了object类，默认的】

	* super.属性：指向父类型特征中的属性【属性公开，子类父类无属性重名，this和super指向的属性一般为同一个】

	* super不是引用，也不保存地址，也不指向任何对象，只是代表当前对象内部的那一块父类型的特征【因此输出时不可只写super，而要super.】

