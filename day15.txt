java_day15
2021/7/30

1.包装类：

	* java 为八种基本数据类型又对应准备了八种包装类【属于引用数据类型】，父类是object

	* 应用：可能在调用某一方法时需要传入一个数据，而该方法的形参类型为object，无法接受基本数据，则可以穿一个数据对应的包装类

	* 分类：基本				包装

		byte				Byte(父类Number)
		short				Short(父类Number)
		int				Integer(父类Number)
		long				Long(父类Number)
		float				Float(父类Number)
		double				Double(父类Number)
		boolean				Boolean(父类Object)
		char				Character(父类Object)

	* 使用：类 变量名 = new 类(数据) ;//里面可以放int和string型的数字

		—— 不是一个“数字”不能包装成integer，编译符合语法，但运行发生异常【java.lang.NumberFormatException】

	？* 方法：数据类型名Value()----返回对应的基本数据类型【只针对包装类型】

		使用：变量.数据类型名Value()

	* 包装类型---(拆箱)-->基本类型,基本类型---(装箱)-->包装类型【现支持自动拆装箱】

	* 静态属性：类名.MAX_VALUE----int类型的最大值;类名.MIN_VALUE----int类型的最小值

	* 自动装箱: integer i = 100 ;		自动拆箱: int x = i ; 

	* 由于==不会出发自动拆箱机制直接比较两个integer数据的大小时，
	
		在两个数据都不超过[-128,127]这个范围时,java为了提高程序的执行效率，将此之间的所有包装对象提前建立好，放到一个方法区的“整数型常量池”当中，目的是只要用这个区间的数据不需要再new了，之间从常量池中取出来

		超出部分，可采用equals方法或者compareTo方法比较

	* integer中的静态方法：parseInt(字符串数字)----返回int数字

		//当然，其他的包类也有类似的方法

				valueOf(字符串数字/int数字)----返回int数字

1.String，int，Integer互换：

	前提：Integer a；int b；String c

	Integer--->String:	a.toString()
	int--->String:		String.valueOf(a)
	String--->int:		Integer.parseInt("c")
	String--->Integer:	Integer.valueOf("c")

